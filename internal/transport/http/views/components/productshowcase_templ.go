// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import (
	"github.com/a-h/templ"
	templruntime "github.com/a-h/templ/runtime"

	"gitlab.com/hmajid2301/gofeedback/internal/transport/http/views/icons"
)

func ProductShowcase() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section id=\"productshowcase\" class=\"py-16\" x-data=\"{ isOpen: false, activeImage: { src: &#39;&#39;, alt: &#39;&#39; }}\"><div class=\"container px-4 mx-auto\"><h2 class=\"mb-12 text-4xl font-bold text-center\">Features Showcase</h2><!-- Upvotes Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div class=\"order-1 md:order-2\"><button @click=\"activeImage = { src: &#39;/static/images/product/upvotes.png&#39;, alt: &#39;Upvotes interface&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/upvotes.png\" alt=\"Upvotes interface\" class=\"w-full rounded-lg\"></button></div><div class=\"order-2 md:order-1\"><h3 class=\"mb-4 text-3xl font-bold\">Prioritize What Matters</h3><p class=\"text-lg\">Our voting system surfaces the most requested features automatically. Users can:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "Upvote existing suggestions</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "Submit new feature requests</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "Track request status</li></ul></div></div><!-- Reviews Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div><button @click=\"activeImage = { src: &#39;/static/images/product/reviews.png&#39;, alt: &#39;AI Review Analysis&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/reviews.png\" alt=\"AI Review Analysis\" class=\"w-full rounded-lg\"></button></div><div><h3 class=\"mb-4 text-3xl font-bold\">AI-Powered Review Aggregation</h3><p class=\"text-lg\">Our AI system automatically collects and analyzes user feedback from multiple platforms:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "Google Play Store & App Store reviews</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "Social media (Reddit, Mastodon)</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "Automatic duplicate detection</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "Sentiment analysis scoring</li></ul></div></div><!-- Roadmap Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div class=\"order-1 md:order-2\"><button @click=\"activeImage = { src: &#39;/static/images/product/roadmap.png&#39;, alt: &#39;Roadmap interface&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/roadmap.png\" alt=\"Roadmap interface\" class=\"w-full rounded-lg\"></button></div><div class=\"order-2 md:order-1\"><h3 class=\"mb-4 text-3xl font-bold\">Transparent Roadmapping</h3><p class=\"text-lg\">Our Kanban-style roadmap keeps everyone aligned with:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "Clear status tracking (Planned, In Progress, Done)</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "Progress percentage indicators</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "Estimated completion dates</li></ul></div></div><!-- Changelog Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div><button @click=\"activeImage = { src: &#39;/static/images/product/changelog.png&#39;, alt: &#39;Changelog interface&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/changelog.png\" alt=\"Changelog interface\" class=\"w-full rounded-lg\"></button></div><div><h3 class=\"mb-4 text-3xl font-bold\">Stay Updated</h3><p class=\"text-lg\">Our changelog system helps you:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "Announce new features</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "Document bug fixes</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "Share improvement notes</li></ul></div></div><!-- Knowledge Base Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div class=\"order-1 md:order-2\"><button @click=\"activeImage = { src: &#39;/static/images/product/knowledge_base.png&#39;, alt: &#39;Knowledge Base interface&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/knowledge_base.png\" alt=\"Knowledge Base interface\" class=\"w-full rounded-lg\"></button></div><div class=\"order-2 md:order-1\"><h3 class=\"mb-4 text-3xl font-bold\">Self-Service Support</h3><p class=\"text-lg\">Our knowledge base includes:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "Categorized articles</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "Search functionality</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "Feedback mechanisms</li></ul></div></div><!-- API Integrations Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div><button @click=\"activeImage = { src: &#39;/static/images/product/api.png&#39;, alt: &#39;API Integrations&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/api.png\" alt=\"API Integrations\" class=\"w-full rounded-lg\"></button></div><div><h3 class=\"mb-4 text-3xl font-bold\">Seamless Integrations</h3><p class=\"text-lg\">Connect with your existing stack through powerful integrations:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "REST API & Webhooks</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "Intercom & Freshdesk</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "Zapier automation</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "Real-time sync</li></ul></div></div><!-- Feedback Widget Section --><div class=\"grid gap-8 items-center mb-16 md:grid-cols-2\"><div class=\"order-1 md:order-2\"><button @click=\"activeImage = { src: &#39;/static/images/product/widget.png&#39;, alt: &#39;Feedback Widget interface&#39; }; isOpen = true\" class=\"p-0 w-full bg-transparent rounded-lg border-none shadow-lg transition-shadow hover:shadow-xl\"><img src=\"/static/images/product/widget.png\" alt=\"Feedback Widget interface\" class=\"w-full rounded-lg\"></button></div><div class=\"order-2 md:order-1\"><h3 class=\"mb-4 text-3xl font-bold\">Embeddable Feedback Widget</h3><p class=\"text-lg\">Collect feedback directly from your website with our customizable widget:</p><ul class=\"mt-4 space-y-3\"><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "One-line script installation</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "Custom color schemes and branding</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "Real-time preview editor</li><li class=\"flex items-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icons.Tick("mr-2 w-6 h-6 text-emerald-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "Built-in analytics dashboard</li></ul></div></div><!-- Enhanced Image Modal --><div x-show=\"isOpen\" x-transition:enter=\"transition ease-out duration-200\" x-transition:enter-start=\"opacity-0\" x-transition:enter-end=\"opacity-100\" x-transition:leave=\"transition ease-in duration-150\" x-transition:leave-start=\"opacity-100\" x-transition:leave-end=\"opacity-0\" class=\"flex fixed inset-0 z-50 justify-center items-center bg-base-300/50 backdrop-blur-sm\" @click.away=\"isOpen = false\" @keydown.escape.window=\"isOpen = false\" role=\"dialog\" aria-modal=\"true\" :aria-label=\"&#39;Enlarged view of &#39; + activeImage.alt\"><div class=\"relative p-4 w-full max-w-4xl max-h-[90vh]\"><button @click=\"isOpen = false\" class=\"absolute right-0 -top-8 text-gray-600 transition-colors hover:text-gray-800 group\" aria-label=\"Close modal\"><div class=\"flex justify-center items-center w-10 h-10 bg-white rounded-full shadow-lg transition-shadow group-hover:shadow-xl\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"></path></svg></div></button> <img :src=\"activeImage.src\" :alt=\"activeImage.alt\" class=\"object-contain w-full h-full rounded-lg shadow-xl\"></div></div></div></section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
