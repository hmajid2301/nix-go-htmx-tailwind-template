services:
  redis:
    image: redis:7.4.1
    ports:
      - "6379:6379"

  postgres:
    image: postgres:16.6
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  oauth:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.10
    ports:
      - "9090:8080"

  otel-collector:
    image: otel/opentelemetry-collector:0.116.1
    ports:
      - 4317:4317
      - 4318:4318
      - 1888:1888
      - 8888:8888
      - 8889:8889
    volumes:
      - ./docker/otelcol.yaml:/etc/otelcol/config.yaml
    depends_on:
      - tempo

  prometheus:
    image: prom/prometheus:v3.1.0
    volumes:
      - ./docker/prometheus.yaml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:11.4.0
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana-data:/var/lib/grafana

  tempo:
    image: grafana/tempo:2.6.1
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo.yaml:/etc/tempo.yaml
    deploy:
      resources:
        limits:
          cpus: '0.50'  # Limit to 50% of a single CPU core
          memory: '512M'  # Limit to 512MB of memory

  loki:
    image: grafana/loki:3.3.2
    command: [ "-config.file=/etc/loki/loki-config.yaml" ]
    volumes:
      - ./docker/loki.yaml:/etc/loki/loki-config.yaml

volumes:
  postgres-data:
  grafana-data:
